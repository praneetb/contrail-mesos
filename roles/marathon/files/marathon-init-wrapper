#!/bin/bash
set -o errexit -o nounset -o pipefail

function marathon {
  local etc_marathon=/etc/marathon
  local args=()
  [[ ! -f /etc/default/marathon ]]        || . /etc/default/marathon
  [[ ! ${MASTER:-} ]]  || args+=( --master "$MASTER" )
  [[ ! ${HOST:-} ]]    || args+=( -h "$HOST" )
  for f in "$etc_marathon"/* # cluster log_dir port &al.
  do
    if [[ -f $f ]]
    then
      local name="$(basename "$f")"
      if [[ $name == '?'* ]]         # Recognize flags (options without values)
      then args+=( --"$name" )
      else args+=( --"$name"="$(cat "$f")" )
      fi
    fi
  done
  logged /usr/bin/marathon "${args[@]+"${args[@]}"}"
}

# Send all output to syslog and tag with PID and executable basename.
function logged {
  local tag="${1##*/}[$$]"
  exec 1> >(exec logger -p user.info -t "$tag")
  exec 2> >(exec logger -p user.err  -t "$tag")
  exec "$@"
}

function msg { out "$*" >&2 ;}
function err { local x=$? ; msg "$*" ; return $(( $x == 0 ? 1 : $x )) ;}
function out { printf '%s\n' "$*" ;}

marathon "$@"
